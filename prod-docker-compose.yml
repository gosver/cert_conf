version: '3.7'

services:
  mysql:
    image: mysql:8.1
    restart: always
    volumes:
      - ./db/db_prod:/var/lib/mysql
    environment:
      MYSQL_DATABASE: black_financier
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8101:3306"
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--lower_case_table_names=1']
    container_name: bf_mysql
  redis:
    container_name: bf_redis
    build:
      context: .
      dockerfile: ./redis/Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - 6379:6379
  django-gunicorn:
    build:
      context: ./
      dockerfile: ./back/Dockerfile.prod
    expose:
      - 8000
    volumes:
      - ./back/financier_web_main/static:/usr/src/app/financier_web_main/static
    env_file:
      - ./.env.prod
    depends_on:
      - mysql
      - redis
    container_name: bf_django_gunicorn_daphnie
  react_build:
    build:
      context: .
      dockerfile: ./front/Dockerfile.react.prod
    volumes:
      - './front:/app'
      - './front/node_modules:/app/node_modules'
      - './front/build:/app/build'
  nginx:
    image: nginx:1.23.4-alpine
    #build:
    #  context: .
    volumes:
      - ./front/build:/usr/share/nginx/html
      - './back/financier_web_main/static:/static'
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "8000:8000"
      - "8001:8001"
      - "443:443"
    container_name: bf_nginx
    depends_on:
      - react_build
  telegram:
    build:
      context: ./
      dockerfile: ./back/Dockerfile_telegram
    command: python ./financier_telegrambot/__main__.py
    volumes:
      - ./back:/usr/src/app/
    depends_on:
      - django-gunicorn
    env_file:
      - ./.env.prod
    container_name: bf_telegram